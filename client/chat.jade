template(name='chat_messages_pane')
    .ui.segment.description.chat_messages.scrolling
        .ui.comments
            each chat_messages
                +chat_message
    if in_chat
        .ui.icon.fluid.attached.input
            i.chevron.right.icon
            input.add_message(type='text' placeholder='Add Message')
                
                
                
                
template(name='chat_list')
    .ui.segments
        each chat_list_items
            +chat_list_item
            
            
template(name='chat_list_item')
    .ui.segment.chat_list_item(href='#' class=chat_list_item_class)
        .content
            .description
                .ui.horizontal.list
                    each participants
                        .item(title=profile.name)
                            // a(href="/user/profile/#{_id}")
                            img.ui.avatar.image(src="{{c.url image_id width=400 height=400 gravity='face' crop='fill'}}")
                            |#{username}
                            +user_status
            .description
                each tags
                    .ui.small.label #{this}
            .description
                // strong {{cutString last_message.body 100}}
                strong {{last_message.body}}
            .description
                |by #{last_message.author.username} #{last_message.when}
            //- .extra
            //-     .span #{unread_message_count} unread messages
            //-     .span #{message_count} total messages                
            
            
            
template(name='chat_message')
    // .ui.segment.message_segment(class=message_segment_class)
        // .ui.comments
    .comment
        a.avatar(href="/user/profile/#{author._id}")
            // img.ui.avatar.image(src="{{c.url author.image_id width=50 height=50 gravity='face' crop='fill'}}")
            img.ui.avatar.image(src="{{c.url author.image_id width=400 height=400 gravity='face' crop='fill'}}")
        .content
            a.author(href="/user/profile/#{author._id}") 
                |#{author.profile.name}
                +user_status author
            .metadata
                span.date #{when}
            .text
                if read
                    | #{body}
                else 
                    strong #{body}
            .actions
                if is_author
                    i.remove.link.icon.delete_message(title='Delete Message')
                else
                    if read
                        i.envelope.open.outline.link.icon.mark_unread(title='Mark Unread')
                    else
                        i.mail.link.outline.icon.mark_read(title='Mark Read')
                +voting
                |Read by:
                each readers
                    .ui.tiny.grey.label #{profile.name}
                    // img.ui.avatar.image(src="{{c.url image_id width=50 height=50 gravity='face' crop='fill'}}")
                                                

template(name='view_chats')
    .ui.stackable.padded.grid.pad_left
        .row
            .four.wide.column
                .ui.basic.circular.label(title='Unread') #{unread_message_count} Unread
                if currentUser
                    .ui.icon.circular.basic.button#create_chat(title='New Chat')
                        i.plus.icon
                        |New Chat
                // .unread_icon(data-tooltip='Unread Messages' data-position='bottom center')
                //     i.secured-letter.icon
                // +theme_tag_filter type='chat'
                // +participant_filter type='chat'
                +chat_list
                //- .ui.small.header Viewing: 
                //-     if viewing_published
                //-         #view_private_chats.ui.button 
                //-             i.unhide.icon
                //-             |Published
                //-     if viewing_private
                //-         #view_published_chats.ui.button 
                //-             i.lock.icon
                //-             |Private
            .twelve.wide.column
                with selected_chat
                    +view_chat
                // .ui.cards
                //     each chats

                                                        
                                                        
template(name='view_chat')
    .ui.stackable.grid
        .centered.row
            .eleven.wide.column
                // +minimal_chat_view this
                +chat_messages_pane this
            .four.wide.column.shadowed-box
                .ui.small.header 
                    i.line.chart.icon
                    |Stats
                .ui.small.inline.header #{message_count} Messages
                .ui.small.inline.header #{unread_message_count} Unread
                .ui.small.header 
                    i.align.left.icon
                    |Description
                |!{content}
                .ui.small.header
                    i.users.icon
                    |Participants
                if currentUser
                    if in_chat
                        a.ui.button.leave_chat(href="#")
                            i.sign.in.icon
                            |Leave
                    else
                        a.ui.button.join_chat(href="#")
                            i.sign.out.icon
                            |Join
                .ui.divided.relaxed.list
                    each participants
                        .item
                            img.ui.avatar.image(src="{{c.url image_id width=400 height=400 gravity='face' crop='fill'}}")
                            .content
                                .header
                                    a(href="/user/#{username}") #{profile.name}
                                    if subscribed
                                        i.bell.outline.icon(title='Subscribed')
                                    else
                                        i.bell.slash.outline.icon(title='Not Subscribed')
                                .description
                                    | @#{username}
                                    +user_status
                if is_admin
                    .ui.button.close_chat(title='Close Chat')
                        i.cancel.icon
                        |Close Chat
                .ui.small.header 
                    i.tags.icon
                    | Tags
                each tags
                    .ui.large.label.doc_tag #{this}
                // +subscribe_button
                // +bookmark_button
                // unless is_author
                //     +resonate_button
                //     +thanks_button
                // +resonates_list

                .ui.small.header 
                    i.eye.icon
                    |Visibility
                if published
                    .ui.green.large.label 
                        i.unlock.icon
                        | Public
                else
                    .ui.large.label 
                        i.lock.icon
                        | Private
                .ui.small.header Started by 
                    img.ui.avatar.image(src="{{c.url author.image_id width=400 height=400 gravity='face' crop='fill'}}")
                    |#{author.profile.name} #{when}
