template(name='user_layout')
    +nav
    with user_from_username_param
        .ui.padded.stackable.grid
            .row
                .four.wide.column
                    if kiosk_photo
                        img.ui.centered.circular.shadowed.image(src="{{c.url kiosk_photo height=300 width=300 gravity='face' crop='fill'}}")
                    else if image_id
                        img.ui.centered.circular.shadowed.image(src="{{c.url image_id height=300 width=300 gravity='face' crop='fill'}}")
                        //- a.item(href="/user/#{user_from_username_param.username}/")
                    .ui.center.aligned.basic.segment
                        a(href="/user/#{user.username}")
                            h1.ui.large.center.aligned.header
                                | #{user.first_name}
                                | #{user.last_name}
                    .ui.center.aligned.small.grey.header
                        | #{user.tagline}
                    .ui.center.aligned.small.grey.header
                        | @#{user.username}        
                    if is_staff
                        +user_check_steps
                        a.ui.fluid.basic.button.item(href="/user/#{user_from_username_param.username}/edit" title='settings')
                            i.settings.large.icon
                            | settings
                    else if is_current_user
                        a.ui.fluid.basic.button.item(href="/user/#{user_from_username_param.username}/edit" title='settings')
                            i.settings.large.icon
                            | settings
                    //- else
                        //- .ui.button.direct_message
                        //-     i.sent.icon
                        //-     |direct message
                    unless is_staff
                        .ui.vertical.fluid.menu
                            //- if is_staff
                            //-     a.item(href="/user/#{username}/residency" class="{{isActiveRoute 'user_residency'}}")
                            //-         i.home.icon
                            //-         |residency
                            //-     a.item(href="/user/#{username}/healthclub" class="{{isActiveRoute 'user_healthclub'}}")
                            //-         i.clinic.medical.icon
                            //-         |health club                        
                            a.item(href="/user/#{username}" class="{{isActiveRoute 'user_about'}}")
                                i.info.icon
                                |about
                        if is_staff
                            .ui.vertical.fluid.menu
                                a.item(href="/user/#{username}/documents" class="{{isActiveRoute 'user_documents'}}")
                                    i.handshake.icon
                                    |social
                                a.item(href="/user/#{username}/products" class="{{isActiveRoute 'user_products'}}")
                                    i.shop.icon
                                    |products
                                a.item(href="/user/#{username}/payment" class="{{isActiveRoute 'user_payment'}}")
                                     i.money.icon
                                     |payment
                                a.item(href="/user/#{username}/contact" class="{{isActiveRoute 'user_contact'}}")
                                     i.phone.icon
                                     |contact
                                a.item(href="/user/#{username}/comparison" class="{{isActiveRoute 'user_comparison'}}")
                                    i.fork.icon
                                    |comparison
                                a.item(href="/user/#{username}/tags" class="{{isActiveRoute 'user_tags'}}")
                                    i.tags.icon
                                    |tags
                                a.item(href="/user/#{username}/karma" class="{{isActiveRoute 'user_karma'}}")
                                     i.heart.icon
                                     |karma
                                a.item(href="/user/#{username}/transactions" class="{{isActiveRoute 'user_transactions'}}")
                                     i.money.icon
                                     |transactions                            
                    if is_current_user
                        a.ui.fluid.button.logout(href="#")
                            i.sign.out.icon
                            |log out
                        a.ui.fluid.button.logout_other_clients(href="#")
                            |logout other clients
                    //- unless is_staff
                    //-     +gr_status                
                    if is_admin
                        .ui.segment
                            .ui.grey.header 
                                //- +i name='user shield'
                                i.shield.icon
                                |roles
                            each roles
                                .ui.basic.label #{this}
                    +staff_verification
                    if user_is_resident
                        +resident_info         
                .twelve.wide.column.shadowed-box
                    +yield
    unless is_frontdesk
        +footer 


template(name='user_check_steps')
    .ui.vertical.fluid.small.menu
        each user_check
            .item
                if is_admin
                    i.refresh.link.icon.recheck
                if user_check_completed
                    i.large.green.checkmark.icon
                else 
                    i.large.circle.grey.outline.icon 
                i.icon(name=icon)
                //- +i name=icon classes='ui avatar image'
                |#{title}
        //- .item
        //-     if completed
        //-         i.large.green.checkmark.icon
        //-     else 
        //-         i.large.circle.outline.icon 
        //-     +i name='signature' classes='ui avatar image'
        //-     |rules and regs
        //- .item
        //-     if completed
        //-         i.large.green.checkmark.icon
        //-     else 
        //-         i.large.circle.outline.icon 
        //-     |address info
        //- .item
        //-     if completed
        //-         i.large.green.checkmark.icon
        //-     else 
        //-         i.large.circle.outline.icon 
        //-     |email verification
        //- .item
        //-     if completed
        //-         i.large.green.checkmark.icon
        //-     else 
        //-         i.large.circle.outline.icon 
        //-     .title staff gov verification





template(name='staff_verification')
    if is_staff
        .ui.segment
            .ui.header 
                if staff_verifier
                    +i name='id-verified' classes='ui mini inline image'
                else
                    i.red.ban.icon
                |Verified by Staff
            if staff_verifier
                .ui.list
                    .item verified by Staff: #{staff_verifier}            
                    .item verification Date: {{long_date verification_timestamp}}
            else
                  .ui.button.verify Verify Government ID as #{currentUser.username}
            .ui.header #{user_from_username_param.username} created by #{user_from_username_param.added_by_username}
            .ui.header Created on {{long_date user_from_username_param.createdAt}}



template(name='user_residency')
    +user_key
    +user_unit
    .ui.segment
        //- +text_view key='first_name' label='First Name' direct=true
        //- +text_view key='last_name' label='Last Name' direct=true
        if is_admin
            +text_view key='address' label='address' direct=true
        //- +text_view key='email' label='Email' direct=true
        +phone_view key='phone' label='phone' direct=true
        if user_is_resident
            //- if is_staff
            +number_view key='unit_number' label='unit #' direct=true
            +number_view key='building_number' label='building #' direct=true
            +number_view key='healthclub_code' label='healthclub_code' direct=true
            +text_view key='building_code' label='building code' direct=true
            +date_view key='start_date' label='start date' direct=true
            +date_view key='expiration_date' label='expiration date' direct=true
        +textarea_view key='notes' label='notes' icon='align-left' direct=true
        each emails
            .ui.label #{address}
    
    
template(name='user_healthclub')
    .ui.segment
        .ui.header 
            i.credit.card.icon
            //- +i name='token-card-code'
            |HC Card
        .ui.circular.button.generate_barcode
            i.barcode.icon
            |Generate Health Club Checkin Barcode
        div
        svg#barcode
    
template(name='user_products')
    .ui.segment
        .ui.header 
            i.shop.icon
            |User Products
    
    
template(name='user_about')
    img.ui.fluid.rounded.image(src="{{c.url banner_image_id width=1000 height=200 crop='crop'}}")
    .ui.stackable.grid
        .row
            .four.wide.column
                +user_healthclub                        
            if user_is_resident
                if is_staff
                    each staff_resident_widgets
                        .four.wide.column
                            +Template.dynamic template=widget_template
                    .four.wide.column
                        +user_checkins
                    .four.wide.column
                        +user_guests
                    .four.wide.column
                        +user_violations
                    .four.wide.column
                        +user_signatures
                    .four.wide.column
                        +user_notes        
                    .four.wide.column
                        +user_unit
                    .four.wide.column
                        +membership_status
                    .four.wide.column
                        +user_permit
                
template(name='resident_info')
    .ui.segment
        //- +text_view key='first_name' label='First Name' direct=true
        //- +text_view key='last_name' label='Last Name' direct=true
        if is_admin
            +text_view key='address' label='Address' direct=true
        //- +text_view key='email' label='Email' direct=true
        +phone_view key='phone' label='Phone' direct=true
        if user_is_resident
            //- if is_staff
            +number_view key='unit_number' label='Unit #' direct=true
            +number_view key='building_number' label='Building #' direct=true
            +number_view key='healthclub_code' label='Healthclub_code' direct=true
            +text_view key='building_code' label='Building Code' direct=true
            +date_view key='start_date' label='Start Date' direct=true
            +date_view key='expiration_date' label='Expiration Date' direct=true
        +textarea_view key='notes' label='notes' icon='align-left' direct=true
        div
        each emails
            if verified
                .ui.green.label(title='Verified') #{address}
            else
                .ui.orange.label(title='Unverified') #{address}

    
            
template(name='user_transactions')
    .ui.segment
        .ui.header sent karma
        each sent_karma
            .ui.segment
                .ui.small.inline.header #{_author_username}
                |#{description}
                each tags
                    .ui.label #{this}
                .ui.small.inline.header #{karma_amount}
    +transactions
            
template(name='received_karma')
    .ui.segment
        .ui.header received karma
        each received_karma
            .ui.segment
                .ui.small.inline.header #{_author_username}
                |#{description}
                each tags
                    .ui.label #{this}
                .ui.small.inline.header #{karma_amount}
                
            
            

template(name='user_permit')
    .ui.segment
        .ui.grey.inline.center.aligned.small.header 
            +i name='badge'
            |permit
        +goto_model slug='parking_permit'
        
        with permit_doc
            .ui.small.inline.header Permit
            .ui.grey.inline.header #{permit}
            div
            .ui.small.inline.header Date Issued
            .ui.grey.inline.header #{date_issued}
            div
            .ui.small.inline.header Expiration Date
            .ui.grey.inline.header #{expiration_date}
            div
            .ui.small.inline.header License Plate 
            .ui.grey.inline.header #{license_plate}
            div


            
template(name='user_permits')
    if user_permits
        .ui.segment
            .ui.grey.inline.center.aligned.small.header 
                i.id.card.alternate.icon
                +goto_model slug='parking_permit'
            
                //- +i name='badge'
                |Permits

            
template(name='user_signatures')
    .ui.segment
        .ui.grey.inline.center.aligned.small.header 
            //- +i name='signature'
            i.pencil.icon
            | Signatures
        .ui.link.large.list
            a.item(href='#') Rules and Regulations
            +goto_model slug='rules_regs_signing'

            a.item(href='#') Proof of Residency
            a.item(href='#') Injury Waiver


template(name='user_notes')
    if user_is_resident
        if is_staff
            .ui.segment
                +textarea_edit key='staff_notes' title='staff notes' icon='note' direct=true

            
            
template(name='gr_status')   
    with user_from_username_param         
        //- .ui.small.header
        //-     i.clock.icon
        //-     | Status
        if current_user
            +array_edit key='gr_status' label='Status' direct=true icon='clock'
        else
            each gr_status
                .ui.label #{this}
        //- .ui.small.header
        //-     i.marker.icon
        //-     | Location 
        if current_user
            +array_edit key='gr_location' label='Location' direct=true icon='marker'
        else 
            each gr_location
                .ui.label #{this}
            
            
            
template(name='user_checkins')
    .ui.segment
        .ui.grey.inline.center.aligned.small.header 
            //- +i name='internal'
            |Health Club Check Ins
        if is_staff
            +checkin_button
        .ui.list.smallscroll
            each healthclub_checkins
                .item #{when}
            
            
            
template(name='user_guests')
    .ui.segment
        .ui.grey.inline.center.aligned.small.header 
            //- +i name='groups'
            i.icon(name=icon)
            |Guests
        +goto_model slug='guest'
        //- +add_button model='guest'
        //- .ui.circular.button.add_guest
        //-     |Add Guest
        with user_from_username_param
            .ui.header Total Guests #{total_guests}
            //- .ui.header guests this month #{current_month_guests}
        .ui.link.large.list
            each resident_guests
                a.item(href="/m/guest/#{_id}/view")
                    img.ui.avatar.image(src="{{c.url image_id width=100 height=100 gravity='face' crop='fill'}}")
                    .content
                        |#{guest_name} #{first_name} #{last_name} #{username}

            
            
template(name='user_unit')
    .ui.segment
        .ui.grey.inline.center.aligned.small.header 
            i.home.icon
            //- +i name='interior'
            |Unit
        +goto_model slug='unit'
        with unit
            +number_view key='building_number' label='Building Number' direct=true
            +number_view key='unit_number' label='Unit #' direct=true
            if is_admin
                div
                +edit_button
                +view_button

            
            
            
template(name='user_section')
    +user_delta
    // +Template.dynamic template=user_section_template

    
template(name='user_violations')
    .ui.segment
        .ui.grey.inline.center.aligned.small.header 
            //- +i name='foul'
            i.triangle.alert.icon
            |Violations
        +goto_model slug='violation'
        .ui.button.add_inline_violation
            i.plus.icon
            |Add Violation
        if editing_violation
            .ui.segment
                with editing_violation_doc
                    +textarea_edit key='body' label='description' direct=true
                    +boolean_edit key='active' label='active' direct=true
                    +date_edit key='violation_date' label='date' direct=true
                    +time_edit key='violation_time' label='time' direct=true
                    i.checkmark.link.circular.icon.save_violation
        //- .ui.list
        //-     each violations
        //-         .item
        //-             img.ui.avatar.image(src="{{c.url image_id height=100 gravity='face' crop='fill'}}")
        //-             .content
        //-                 .header #{title}
        //-                 .description !{description}
        //-                     |date:#{violation_date}
        //-                     |time: #{violation_time}
        .ui.comments
            each violations
                .comment
                    img.ui.avatar.image(src="{{c.url image_id height=100 gravity='face' crop='fill'}}")
                    .content
                        a.header(href="/m/violation/#{_id}/view") !{description}
                        .meta #{when}
                            +textarea_view key='body' label='description' direct=true
                            div Date: #{violation_date}
                            div Time: #{violation_time}
                            if active
                                .ui.red.label Active
                        .actions
                            i.pencil.link.circular.icon.edit_violation



template(name='user_log')
    //- .ui.fluid.styled.accordion
    .ui.segment
        .ui.grey.inline.center.aligned.small.header 
            //- +i name='overview-pages-4'
            i.list.icon
            |Log
        .smallscroll
            .ui.list
                each user_log_events
                    .item
                        .content
                            .header #{body}
                            .description #{when}


template(name='user_rules_widget')
    .ui.cloud.segment
        .ui.grey.header
            i.edit.icon
            | User Rules Signature
    

template(name='user_people')
    +user_following
    +follow_user


template(name='user_feed')
    .ui.cloud.segment
        .ui.grey.inline.header 
            +i name='feed'
            |Feed
        //- if current_user
        //-     .ui.fluid.input
        //-         input(type='text' placeholder='Share something...')
    +user_wall
                
                
                
template(name='user_bookmarks')
    .ui.segment
        .ui.grey.inline.center.aligned.small.header 
            //- +i name='bookmark'
            i.bookmark.icon
            |Bookmarks
        .ui.list.smallscroll
            each bookmarks
                .item
                    .content
                        a.header(href="/m/#{model}/#{_id}/view") #{title} [#{model}]
                        .description #{when}

            
            
template(name='user_karma')
    .ui.fluid.styled.accordion
        .active.title
            .ui.grey.inline.center.aligned.small.header 
                i.heartbeat.icon
                | Karma
        .active.content
            .ui.circular.button buy karma
            with user_from_username_param
                |karma #{karma}
            .ui.circular.button.send_new
                |send karma
            if sending_karma
                .ui.icon.circular.button.cancel_sending
                    i.remove.icon
                with send_karma_transaction
                    +textarea_edit key='description' direct=true
                    +array_edit key='tags' direct=true
                    +number_edit key='karma_amount' direct=true
                    .ui.green.circular.button.complete_sending
                        |complete


            
                
template(name='user_unread')
    .ui.cloud.segment
        .ui.header 
            i.new.icon
            |unread messages
                
                

template(name='user_tasks')
    //- .ui.fluid.styled.accordion
    .ui.segment
        .ui.grey.inline.center.aligned.small.header 
            //- +i name='tasks'
            i.tasks.icon
            |staff tasks
        +goto_model slug='task'
        .ui.icon.input
            i.plus.icon
            input.assign_task(type='text' placeholder='assign task...')
        //- .ui.circular.button.view_complete(class=view_complete_class)
        //-     |View Completed
        // .ui.circular.button.view_incomplete(class=view_complete_class)
        //     |View Incomplete
        each assigned_tasks
            .ui.smoothed.segment
                .ui.header #{body}
                +boolean_edit key='complete' label='Complete' direct=true true_icon='checkmark' false_icon='remove'
                //- +voting
                +author_info
                +creation_info
                if is_author
                    +remove_button
                    
            
            
template(name='user_array_list')
    .ui.list
        each users
            .item
                +user_info
            
            
            

            
template(name='user_array_element_toggle')
    .ui.circular.button.toggle_element(class=user_array_element_toggle_class)
        |#{value}

template(name='user_string_toggle')
    .ui.circular.button.toggle_element(class=user_string_element_toggle_class)
        |#{value}
        
            
            
template(name='membership_status')
    .ui.segment
        .active.title
            .ui.grey.inline.center.aligned.small.header 
                |Membership Status
        +email_validation_check
        +lease_expiration_check
        +rules_and_regs_check
        .ui.large.basic.button.email_rules_receipt
            i.envelope.teal.icon
            |Email Rules and Regs Receipt
        //- +rules_and_regs_
        if user_is_owner
            +image_view key='ownership_paperwork' label='ownership paperwork' direct=true
            +pdf_view key='lease_agreement' label='lease agreement' direct=true
        else if user_is_resident
            +date_view key='expiration_date' label='expiration date' direct=true
            +pdf_view key='lease_agreement' label='lease agreement' direct=true
            +pdf_view key='lease_addendum' label='lease addendum' direct=true
        
        
        
        
template(name='user_following')    
    .ui.cloud.segment
        .ui.grey.header 
            i.bell.icon
            |Following
        +user_array_list user=user_from_username_param array='following_ids'
          

template(name='follow_user')    
    .ui.cloud.segment
        .ui.grey.inline.header
            unless current_user
                a.toggle_follow_user(href='#' title='Follow User')
                    i.renew.icon
            else
                i.bell.icon
            |Followed by
        +user_array_list user=user_from_username_param array='followed_by_ids'
                

template(name='user_wall')
    .ui.fluid.styled.accordion
        .active.title
            .ui.grey.inline.center.aligned.small.header 
                i.edit.icon
                |Wall
        .active.content
            if currentUser
                .ui.fluid.icon.input
                    i.plus.icon
                    input.new_post(type='text' placeholder='Add post...')
            .ui.comments
                each wall_posts
                    .comment
                        //- .avatar
                        .active.content
                            a.author(href='#') #{author.first_name} #{author.last_name}
                            .metadata
                                span.date #{when}
                            .text.large120 #{body}
                            .actions
                                i.remove.link.icon.remove_comment(title='Vote Down')
                                i.thumbs.up.link.icon.vote_up_comment(title='Vote Up')
                                |#{points}
                                i.message.link.icon.mark_comment_read(title='Mark Read')        
