template(name='profile')
    with user_from_username_param
    
        .profile-banner-container
            img.ui.fluid.rounded.image(src="{{c.url banner_image_id width=1000 height=300 crop='crop'}}")
        .ui.padded.stackable.grid
            .row
                .four.wide.column.scrolling
                    .ui.large.center.aligned.header
                        | #{user.first_name}
                        | #{user.last_name}
                    .ui.center.aligned.header
                        | @#{user.username}                        
                    if image_id
                        a.item(href="/user/#{user_from_username_param.username}/view")
                            img.ui.medium.image(src="{{c.url image_id height=400 crop='limit'}}")
                    // if current_user
                    .ui.segment
                        +text_view key='first_name' label='First Name' direct=true
                        +text_view key='last_name' label='Last Name' direct=true
                        +text_view key='address' label='Address' direct=true
                        +number_view key='unit_number' label='Unit #' direct=true
                        +number_view key='building_number' label='Building #' direct=true
                        //- +text_view key='email' label='Email' direct=true
                        +phone_view key='phone' label='Phone' direct=true
                        +date_view key='start_date' label='Start Date' direct=true
                        +date_view key='expiration_date' label='Expiration Date' direct=true
                        +textarea_view key='bio' label='Bio' collection='users' icon='align-left'

                        each emails
                            .ui.label #{address}
                    
                    if is_admin
                        .ui.vertical.fluid.menu
                            a.item(href="/user/#{user_from_username_param.username}/edit")
                                i.settings.icon
                                | Settings
                    if current_user
                        .ui.vertical.fluid.menu
                            a.item.logout(href='#')
                                i.sign.out.icon
                                |Log Out
                    .ui.segment
                        .ui.header
                            |#{user.points} Following
                        .ui.header
                            |#{user.points} Followers
                        .ui.header
                            i.heartbeat.icon
                            |#{user.points} Karma
                        .ui.header 
                            i.user.shield.icon
                            |Roles
                        each roles
                            .ui.label #{this}
            
                .six.wide.column
                    +violations
                    +user_bookmarks    
                    +user_feed
                    +user_tasks
                    +user_notifications
                .six.wide.column
                    +user_messages
                    +user_rules_widget
                    .ui.segment
                        .ui.header
                            i.user.icon
                            | Guests
                    if current_user
                        +role_switcher
                    +user_tags
                    +user_checkins
                    +user_chat
            
template(name='user_chat')
    +view_chats
            
            
template(name='user_checkins')
    .ui.header 
        i.barbell.icon
        | User Checkins
            
            
            
template(name='user_section')
    +user_delta
    // +Template.dynamic template=user_section_template

template(name='user_about')
    
template(name='violations')
    .ui.fluid.styled.accordion
        .title
            .ui.inline.header 
                i.exclamation.triangle.icon
                |Violations
                i.dropdown.icon
        .content
            .ui.list
                each violations
                    .item
                        .header #{title} #{violation_date} #{violation_time}


template(name='user_rules_widget')
    .ui.header User Rules Signature
    

template(name='user_people')
    +user_following
    +follow_user

template(name='user_feed')
    .ui.secondary.segment
        .ui.header 
            i.rss.icon
            |Activity Feed
        //- if current_user
        //-     .ui.fluid.input
        //-         input(type='text' placeholder='Share something...')
    +user_wall
                
                
template(name='user_bookmarks')
    .ui.header 
        i.bookmark.icon
        |Bookmarks
            
            
                
template(name='user_unread')
    .ui.secondary.segment
        .ui.header 
            i.new.icon
            |Unread Messages
                
                

template(name='user_tasks')
    .ui.fluid.styled.accordion
        .title
            .ui.inline.header 
                i.tasks.icon
                |Tasks
                i.dropdown.icon
        .content
            .ui.fluid.input
                input.assign_task(type='text' placeholder='Assign task')
            .ui.button.view_complete(class=view_complete_class)
                |View Completed
            // .ui.button.view_incomplete(class=view_complete_class)
            //     |View Incomplete
            each assigned_tasks
                .ui.segment
                    .ui.header #{body}
                    +boolean_edit key='complete' label='Complete'
                    if complete
                        i.big.green.checkmark.icon
                    +voting
                    +author_info
                    +creation_info
                        
            
            
template(name='user_array_list')
    .ui.list
        each users
            .item
                +user_info
            
            
            
template(name='role_switcher')
    .ui.fluid.styled.accordion
        .title
            .ui.inline.header 
                i.user.shield.icon(title='Role Switcher')
                |Roles
                i.dropdown.icon
        .content
            if is_eric
                +user_array_element_toggle key='roles' value='dev' user=currentUser
            +user_array_element_toggle key='roles' value='admin' user=currentUser
            +user_array_element_toggle key='roles' value='user' user=currentUser
            +user_array_element_toggle key='roles' value='staff' user=currentUser
            +user_array_element_toggle key='roles' value='resident' user=currentUser
            +user_array_element_toggle key='roles' value='owner' user=currentUser


            
template(name='user_array_element_toggle')
    .ui.button.toggle_element(class=user_array_element_toggle_class)
        |#{value}

template(name='user_string_toggle')
    .ui.button.toggle_element(class=user_string_element_toggle_class)
        |#{value}
        
template(name='user_tags')
    .ui.fluid.styled.accordion
        .title
            .ui.inline.header 
                i.tags.icon
                |User Tags
                i.dropdown.icon
        .content
            each tags
                .ui.basic.label 
                    if is_user
                        i.remove.link.icon.remove_tag
                    |#{this}
            // .ui.fluid.input
            //     input.tag_user(type='text' placeholder='Tag yourself...')
            // .ui.fluid.input
            //     input(type='text' placeholder="Tag #{user_from_username_param.name}")
            
            
template(name='user_notifications')
    .ui.fluid.styled.accordion
        .title
            .ui.inline.header 
                i.bullhorn.icon
                |Notifications
                i.dropdown.icon
        .content
            +user_following
            +follow_user
    
template(name='user_following')    
    .ui.secondary.segment
        .ui.header 
            i.human.icon
            |Following
        +user_array_list user=user_from_username_param array='following_ids'
          

template(name='follow_user')    
    .ui.secondary.segment
        unless current_user
            a.toggle_follow_user(href='#' title='Follow User')
                i.renew.icon
        else
            i.renew.icon
        |Followed By
        +user_array_list user=user_from_username_param array='followed_by_ids'
                

template(name='user_wall')
    .ui.fluid.styled.accordion
        .title
            .ui.inline.header 
                i.edit.icon
                |Wall
        .content
            if currentUser
                .ui.fluid.icon.input
                    i.plus.icon
                    input.new_post(type='text' placeholder='Add post...')
            .ui.comments
                each wall_posts
                    .comment
                        //- .avatar
                        .content
                            a.author(href='#') #{author.first_name} #{author.last_name}
                            .metadata
                                span.date #{when}
                            .text.large120 #{body}
                            .actions
                                i.remove.link.icon.remove_comment(title='Vote Down')
                                i.thumbs.up.link.icon.vote_up_comment(title='Vote Up')
                                |#{points}
                                i.message.link.icon.mark_comment_read(title='Mark Read')        
