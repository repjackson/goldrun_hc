template(name='delta')
    with current_model
        .ui.stackable.grid
            .row
                .six.wide.column.scrolling
                    .ui.right.aligned.inline.header
                        //- i.icon(class=icon)
                        +i name=icon
                        | #{title}
                    unless is_loading
                        //- if is_admin
                        .ui.icon.large.circular.button.add_model_doc(title="Add #{title}")
                            i.plus.large.icon
                        //- if can_edit
                            //- +edit_circular.button
                        +user_list_toggle key='bookmark_ids' icon='bookmark' label='Bookmark' color='red'
            
                        if can_edit
                            .ui.icon.large.circular.button.edit_model
                                i.cog.icon
                                //- | Configure #{plural}
                        // .ui.divider
                        // // each sessions
                        // //     .ui.icon.circular.button.select_session(class=session_selector_class title='select session')
                        // //         i.play.icon
                        if current_delta
                            if is_dev
                                .ui.icon.large.circular.button.print_delta(title='Print Session Doc')
                                    i.code.icon
                            .ui.reset.icon.large.circular.button(title='Reload Session')
                                i.refresh.icon
                            .ui.delete_delta.icon.large.circular.button(title='Delete Session')
                                i.trash.icon
                        else
                            .create_delta.ui.large.circular.button(title='new session')
                                i.plus.icon
                                |session
                        .ui.segment
                            |#{description}
                        if is_dev
                            .ui.input
                                input.import_subreddit(type='text' placeholder='import_subreddit')
                    // |did: #{session_delta_id}
                            
                    each sorted_facets
                        +facet
                .ten.wide.column.scrolling
                    each current_delta.result_ids
                        +delta_result
                


template(name='facet')
    if filtering_res
        div
        //- .ui.hidden.divider
        .ui.accordion
            .active.title
                .ui.grey.inline.header 
                    if icon
                        i.icon(class=icon)
                        //- +i name=icon            
                    if title
                        |#{title}
                    else 
                        |#{key}
                i.dropdown.icon
            .active.content
                if is_admin
                    .ui.icon.small.transparent.input
                        i.search.icon
                        input.add_filter(type='text')
                    //- div
                each filtering_res
                    if name
                        .selector.ui.compact.circular.button.toggle_selection(class=toggle_value_class title=count)
                            strong #{name}
                            if is_admin
                                small #{cal_count} #{count}
                    else
                        .selector.ui.circular.button.toggle_selection(class=toggle_value_class title=count)
                            strong [null]
                            //- small #{cal_count}

template(name='toggle_delta_config')
    if boolean_true
        .ui.grey.active.icon.circular.button.disable_key(title=label)
            i.icon(class=icon)
            // | #{label}
    else
        .ui.icon.circular.button.enable_key(title=label)
            i.icon(class=icon)
            // | #{label}



template(name='delta_result')
    with result 
        .ui.result.cloud.segment(class=loading_class)
            //- if title
            //-     a.ui.header(href="/m/#{current_model.slug}/#{_id}/view")
            //-         if icon
            //-             //- i.icon(class=icon)
            //-             +i name=icon
            //- 
            //-         |#{title}
            //- .description
            //-     if picture
            //-         img.ui.medium.centered.rounded.image(src="{{c.url picture gravity='face' crop='crop'}}")
            //-     if youtube_id
            //-         +youtube_view key='youtube_id' direct=true
            //- .description
            //-     if description
            //-         |!{description}
            //-     if content
            //-         |!{content}
            each fields
                +Template.dynamic template=view_template 
            //- .extra
            //-     if tags
            //-         each tags
            //-             .ui.label
            //-                 |#{this}
            +user_list_toggle key='bookmark_ids' icon='bookmark' label='Bookmark' color='red'
            .extra
                if is_model
                    a.ui.circular.button.route_model(href="/m/#{slug}")
                        i.sitemap.icon
                        |view model
                    if is_admin
                        a.ui.circular.button.route_model(href="/model/edit/#{_id}")
                            i.edit.icon
                            |edit model
                else
                    if can_edit
                        a.ui.large.icon.circular.button(href="/m/#{current_model.slug}/#{_id}/edit" title='edit')
                            i.pencil.large.icon
                            //- |edit
                    a.ui.icon.large.circular.button(href="/m/#{current_model.slug}/#{_id}/view" title='view')
                        i.right.chevron.large.icon
                        //- |view
                    //- if is_post
                    //-     unless is_author
                +voting
                    //- if is_marketplace
                    //-     .ui.small.header karma price 
                    //-     .ui.header #{karma_price}
                //- each model.actions
                //-     +Template.dynamic template=this data=..
                if _author_id
                    +author_info
                +creation_info
                //- if _timestamp_tags
                //-     .ui.small.inline.grey.header timestamp tags
                //-     each _timestamp_tags
                //-         .ui.label #{this}
                
    
                    
