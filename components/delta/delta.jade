template(name='delta')
    with current_model
        .ui.stackable.padded.grid
            .row
                // .twelve.wide.column.padleft.scrolling(class=delta_left_column_class)
                .six.wide.column.scrolling
                    .ui.right.aligned.inline.header
                        i.icon(class=icon)
                        | #{title}
                    unless is_loading
                        //- if can_add
                        .ui.icon.circular.green.big.button.add_model_doc(title="Add #{title}")
                            i.plus.icon
                        if can_edit
                            //- +edit_button
                            .ui.icon.circular.button.edit_model
                                i.cog.icon
                                //- | Configure #{plural}
                        // .ui.divider
                        // // each sessions
                        // //     .ui.icon.button.select_session(class=session_selector_class title='select session')
                        // //         i.play.icon
                                
                        if current_delta
                            .ui.icon.circular.button.print_delta(title='Print Session Doc')
                                i.code.icon
                            .ui.reset.icon.circular.button(title='Reload Session')
                                i.refresh.icon
                            .ui.delete_delta.icon.circular.button(title='Delete Session')
                                i.trash.icon
                        else
                            .create_delta.ui.button.pointer(title='new session')
                                i.plus.icon
                                |Session
                    // |did: #{session_delta_id}
                            
                    each current_delta.facets
                        +facet
                .ten.wide.column.scrolling
                    each current_delta.result_ids
                        +delta_result
                


template(name='facet')
    if filtering_res
        .ui.accordion
            .active.title
                .ui.inline.small.grey.header 
                    if icon
                        i.small.grey.icon(class=icon)
                    if label
                        |#{label}
                    else 
                        |#{key}
                    i.dropdown.icon
            .active.content
                //- .ui.icon.small.transparent.input
                //-     i.grey.search.icon
                //-     input.add_filter(type='text')
                each filtering_res
                    if name
                        .selector.ui.compact.circular.button.toggle_selection(class=toggle_value_class title=count)
                            | #{name}
                            small #{cal_count} #{count}
                    else
                        .selector.ui.compact.circular.button.toggle_selection(class=toggle_value_class title=count)
                            strong [null]
                            small #{cal_count}

template(name='toggle_delta_config')
    if boolean_true
        .ui.grey.active.icon.button.disable_key(title=label)
            i.icon(class=icon)
            // | #{label}
    else
        .ui.icon.button.enable_key(title=label)
            i.icon(class=icon)
            // | #{label}



template(name='delta_result')
    with result 
        unless is_loading
            .ui.result.segment
                .description
                    each fields
                        +Template.dynamic template=view_template 
                .extra
                    +user_list_toggle key='bookmark_ids' icon='bookmark' label='Bookmark' color='red'
                    if is_model
                        a.ui.circular.button.route_model(href="/m/#{slug}")
                            i.sitemap.icon
                            |View
                        a.ui.circular.button.route_model(href="/model/edit/#{_id}")
                            i.edit.icon
                            |Edit
                    else
                        a.ui.circular.button(href="/m/#{current_model.slug}/#{_id}/edit")
                            i.pencil.icon
                            |Edit
                        a.ui.circular.button(href="/m/#{current_model.slug}/#{_id}/view")
                            i.eye.icon
                            |View
                    //- each model.actions
                    //-     +Template.dynamic template=this data=..
                    if _author_id
                        +author_info
                    +creation_info
                    //- if _timestamp_tags
                    //-     .ui.small.inline.grey.header timestamp tags
                    //-     each _timestamp_tags
                    //-         .ui.label #{this}
                    
    
                    
