template(name='questions')
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                .ui.header 
                    i.question.mark.icon
                    |questions
                .ui.icon.button.add_question(title='add question')
                    i.plus.large.icon
                a.ui.button(href="/questions_stats" title='question stats')
                    i.line.chart.icon
                    |stats
                //- +nav
                //- .ui.inline.header 
                //-     |questions
                if currentUser
                    //- .ui.dividing.header view 
                    .ui.button.view_answered(class=view_answered_class) answered
                    .ui.button.view_unanswered(class=view_unanswered_class) unanswered
                    if view_answered_class
                        .ui.button.view_correct(class=view_correct_class) got correct
                        .ui.button.view_incorrect(class=view_incorrect_class) got incorrect
                +question_cloud
                //- div
                //- .ui.button.view_has_correct_answer(class=view_has_correct_answer_class) has correct answer
                //- |type 
                //- .ui.button.view_all_types(class=view_all_class) all
                //- .ui.button.view_boolean(class=view_boolean_class) yes/no
                //- .ui.button.view_multiple_choice(class=view_multiple_choice_class) multiple choice                    
            .twelve.wide.column
                +change_view_mode key='items' icon='bars'
                +change_view_mode key='grid' icon='th'
                +change_view_mode key='table' icon='list'
                .scrolling
                    if viewing_items
                        each questions
                            +question_segment
                    if viewing_grid
                        .ui.three.stackable.cards 
                            each questions 
                                +question_card
                    if viewing_table
                        table.ui.celled.selectable.very.basic.table
                            thead
                                tr
                                    th title
                                    th correct answer
                                    th up/down
                                    th answers
                                    //- each question_fields
                                    //-     th #{title}
                            tbody
                                each questions
                                    tr.view_question
                                        td 
                                            |!{title}
                                        td #{has_correct_answer}
                                        td #{upvotes}/#{downvotes}
                                        td #{answer_count}
                                        //- each question_fields
                                        //-     td #{field_value}



template(name='change_view_mode')
    .ui.large.icon.button.select_mode(title='label' class=view_mode_class)
        i.icon(class=icon)


template(name='question_cloud')
    div
    i.large.tag.icon
    .ui.left.icon.input
        i.search.icon
        input#search(type='text' placeholder='search')
        //- +inputAutocomplete settings=settings id="search" class="" autocomplete="off" 
    if selected_question_tags
        #clear_question_tags.ui.active.icon.button
            i.remove.icon
        each selected_question_tags
            .unselect_question_tag.ui.active.button
                strong #{this}
    each all_question_tags
        .ui.compact.button.select_question_tag(class=cloud_tag_class) 
            strong #{this.name}



template(name='question_segment')
    //- .ui.card    
    .ui.segment
        img.ui.fluid.image(src="{{c.url question_image_id width=400 height=200 crop='fill'}}")
        .content
            a.ui.header(href="/question/#{_id}/view") !{title}
            div
            if image_id
                +image_view key='image_id' icon='image' label='image' direct=true
            each tags
                .ui.basic.label #{this}
            div
            if is_boolean_answer
                if my_answer 
                    |you answered #{my_answer.boolean_choice}
                else 
                    .ui.button.choose_true yes
                    .ui.button.choose_false no
            if show_before_test
                //- .ui.header 
                //-     |choices
                .ui.large.bulleted.list
                    each choices
                        .item
                            |!{content}
            if my_answer
                //- .ui.header your answer
                with my_answer
                    .ui.small.header #{choice_content }#{when} by #{_author_username}
            .ui.list 
                .item #{answer_count} answers
                    if question.has_correct_answer
                        .item #{incorrect_count} incorrect 
                        .item #{correct_count} correct 
                        .item correct users
                            each correct_user_ids
                                |#{this}
                        .item incorrect users
                            each incorrect_user_ids
                                |#{this}
                if is_multiple_choice    
                    //- .item #{choice_count} choices
                    each answer_selections 
                        .item #{choice_content}: #{choice_selection_count} (#{choice_percent}%)
                .item upvoters
                    each upvoter_ids
                        +user_info this
                .item downvoters
                    each downvoter_ids
                        +user_info this
            if points 
                span #{points} points (#{upvotes} up, #{downvotes} down)
        a.ui.large.button(href="/question/#{_id}/view")
            |view
            i.right.chevron.icon
        


template(name='question_card')
    .ui.card
        img.ui.fluid.image(src="{{c.url question_image_id width=400 height=200 crop='fill'}}")
        .content
            a.ui.header(href="/question/#{_id}/view") !{title}
            div
            if image_id
                +image_view key='image_id' icon='image' label='image' direct=true
            each tags
                .ui.basic.label #{this}
            div
            if is_boolean_answer
                if my_answer 
                    |you answered #{my_answer.boolean_choice}
                else 
                    .ui.button.choose_true yes
                    .ui.button.choose_false no
            if show_before_test
                //- .ui.header 
                //-     |choices
                .ui.large.bulleted.list
                    each choices
                        .item
                            |!{content}
            if my_answer
                //- .ui.header your answer
                with my_answer
                    .ui.small.header #{choice_content }#{when} by #{_author_username}
            .ui.list 
                .item #{answer_count} answers
                    if question.has_correct_answer
                        .item #{incorrect_count} incorrect 
                        .item #{correct_count} correct 
                        .item correct users
                            each correct_user_ids
                                |#{this}
                        .item incorrect users
                            each incorrect_user_ids
                                |#{this}
                if is_multiple_choice    
                    //- .item #{choice_count} choices
                    each answer_selections 
                        .item #{choice_content}: #{choice_selection_count} (#{choice_percent}%)
                i.thumbs.up.outline.icon
                |#{upvotes}
                //- each upvoter_ids
                //-     +user_info this
                i.thumbs.up.outline.icon
                |#{downvotes}
                //- each downvoter_ids
                //-     +user_info this
                |#{points}
        //- a.ui.large.button(href="/question/#{_id}/view")
        //-     |view
        //-     i.right.chevron.icon
        



template(name='question_view')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    a.ui.fluid.button(href="/m/question")
                        |questions
                    .ui.header question view 
                    +image_view key='question_image_id' label='image' direct=true
                    if can_edit
                        a.ui.fluid.button(href="/question/#{_id}/edit")
                            i.pencil.icon
                            |edit
                    each tags 
                        .ui.basic.label #{this}
                    //- .ui.small.header settings 
                    //-     if has_answer_limit
                    //-         p answer limit #{answer_limit}
                    +voting_full
                    #container
                    +cal 
                .six.wide.column
                    img.ui.centered.rounded.image(src="{{c.url passage_image gravity='face' crop='fit'}}")
                    div.f7 !{title}
                    if my_answer
                        div.f6 !{explanation}
                    if image_id
                        +image_view key='image_id' icon='image' label='image' direct=true
                    if show_before_test
                        .ui.header 
                            |choices
                        each choices
                            .ui.segment(class=answer_segment_class)
                                .ui.header 
                                    |!{content}
                    if my_answer
                        .ui.header my answer
                        with my_answer
                            .ui.small.header #{when} by #{_author_username}
                    .ui.inline.header stats
                    .ui.icon.small.button.calc_stats
                        i.refresh.icon
                    .ui.list 
                        .item #{view_count} views
                        .item #{answer_count} answers
                        if has_correct_answer
                            .item #{incorrect_count} incorrect 
                            .item #{correct_count} correct 
                            .item correct users
                                each correct_user_ids
                                    +user_info this
                            .item incorrect users
                                each incorrect_user_ids
                                    +user_info this
                        if is_multiple_choice    
                            .item #{choice_count} choices
                            each answer_selections 
                                .item #{choice_content}: #{choice_selection_count} (#{choice_percent}%)
                        //- .item upvoters
                        //-     each upvoter_ids
                        //-         +user_info this
                        //-         //- |#{this}
                        //- .item downvoters
                        //-     each downvoter_ids
                        //-         +user_info this
                        //-         //- |#{this}
                    +comments
                .six.wide.column
                    if can_answer
                        .ui.fluid.button.new_answer_session
                            |answer
                    .ui.header
                        |all answers
                    .ui.link.list
                        each answer_sessions
                            a.item(href="/answer_session/#{_id}/view")
                                .content 
                                    .header #{number_answer} #{text_answer} #{choice_selection_content} #{boolean_choice}
                                    .description
                                        |#{when} by #{_author_username}
                                        i.clock.icon 
                                        |#{answer_duration} secs
                                        if is_correct_answer
                                            i.checkmark.large.icon(title='correct')
                                        else 
                                            i.remove.large.icon(title='incorrect')
                            if can_edit
                                +remove_button
                    //- .ui.inline.header
                    //-     | bounties
                    //- .ui.icon.button.offer_bounty(title='offer bounty')
                    //-     i.plus.icon
                    //- each bounties
                    //-     .ui.segment
                    //-         a.ui.header(href="/bounty/#{_id}/view")
                    //-             |#{when}
                    //-         div
                    //-         +number_view key='total_amount' label='total amount' direct=true
                    //-         div
                    //-         +number_view key='amount_per_answer' label='amount per answer' direct=true
                    //-     if can_accept 
                    //-         .ui.button.accept accept


template(name='cal')
    #cal


template(name='questions_stats')
    .ui.padded.stackable.grid 
        .centered.row 
            .four.wide.center.aligned.column
                a.ui.large.button(href='/questions')
                    |questions
            .eight.wide.column
                .ui.center.aligned.large.header 
                    +i name='line-chart'
                    |question stats
            .four.wide.center.aligned.column
                .ui.icon.large.button.recalc_questions_stats
                    i.refresh.icon
        .row 
            .eight.wide.column
                with questions_stats_doc
                    .ui.segment
                        .ui.header
                            +i name='positive-dynamic'
                            |my stats 
                        .ui.big.list
                            //- .item #{question_session_count} sessions
                            .item #{total_answers_amount} answers
                            .item #{correct_answers_amount} correct question amount
                            .item #{incorrect_answers_amount} incorrect question amount
                            .item #{answer_count_ranking} session # ranking
                            .item #{total_answer_correct_percent}% total answer correct percent
                            .item #{authored_question_amount} questions authored
                            .item #{question_session_count} correct tag cloud
                            .item #{question_session_count} incorrect tag cloud
            .eight.wide.column
                .ui.segment
                    .ui.header 
                        +i name='leaderboard'
                        |leaderboard 
                    .ui.header 
                        |most sessions 
                    .ui.big.list
                        each ranked_amount_stats
                            .item #{author.username}: #{question_session_count}
                    .ui.header 
                        |highest average correct % 
                    .ui.big.list
                        each ranked_percent_stats
                            .item #{author.username}: #{average_correct_percent_amount}%
                    
