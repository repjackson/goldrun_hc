template(name='tests')
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                .ui.inline.grey.header
                    i.edit.icon
                    |tests
                if currentUser
                    .ui.icon.button.add_test(title='add test')
                        i.plus.icon
                //- .ui.fluid.green.large.button.take_forest_test
                //-     i.right.chevron.large.icon
                +test_cloud
            .six.wide.column
                |view
                .ui.button taken
                .ui.button untaken
                |sort by
                .ui.button toughest
                .ui.button easiest
                .ui.button newest
                .ui.button most taken
                .largescroll
                    each tests
                        +test_segment
            .six.wide.column
                if selected_test_doc
                    .ui.icon.right.floated.button.unselect_test
                        i.remove.icon
                    with selected_test_doc
                        +selected_test
                else 
                    .ui.small.button.new_test 
                        i.plus.icon
                        |new test 
                    i.refresh.link.icon.refresh_tests_stats
                    with tests_stats_doc
                        .ui.small.grey.header #{total_tests} total tests 
                        .ui.small.grey.header #{week_tests_count} tests this week
                        .ui.small.grey.header #{day_tests_count} tests today
                

template(name='test_segment')
    .ui.basic.pointer.segment.select_test(class=select_test_class)
        .ui.grey.small.header #{title}
        //- a.ui.grey.small.header(href="/test/#{_id}/view") #{title}
        .description
            //- each tags
            //-     .ui.basic.label #{this}
            //- .ui.list
            //-     .item #{minute_amount} mins
            //-     .item #{question_amount} questions
            //-     .item #{session_count} sessions
            //-     .item #{total_average}% average
            //-     .item #{incorrect_average} correct average
            //-     .item #{correct_average} incorrect average
            //-     .item #{comment_count} comments

            //- a.ui.icon.button(href="/test/#{_id}/view" title='view')
            //-     i.right.chevron.icon
    //- .ui.divider
    
    
template(name='selected_test')
    .ui.header #{title}
    |!{body}
    +array_view key='tags' direct=true
    div
    a.ui.icon.button(href="/test/#{_id}/view") 
        i.right.chevron.icon
    //- div
    //- +voting_full
    
    
template(name='test_cloud')
    div
    //- #cloud
        //- .ui.left.icon.input
        //-     i.search.icon
        //-     +inputAutocomplete settings=settings id="search" class="" autocomplete="off" 
        // .ui.hidden.fitted.divider
    //- i.grey.tags.icon
    //- .ui.inline.header tags
    if selected_test_tags
        #clear_tags.ui.active.icon.button
            i.remove.icon
        each selected_test_tags
            .unselect_test_tag.ui.active.button
                strong #{this}
    each all_test_tags
        .ui.compact.button.select_test_tag(class=cloud_tag_class) 
            strong #{this.name}


                    



                    

template(name='select_english_answer')
    .ui.compact.button.set_editing
        |#{answer}
    
    if editing_this
        .ui.buttons
            .ui.button.save_answer A
            .ui.button.save_answer B
            .ui.button.save_answer C
            .ui.button.save_answer D
            .ui.button.save_answer E
    //- .ui.small.input 
    //-     input(type='text') 







template(name='answer_row')
    .ui.black.basic.icon.mini.compact.buttons
        .ui.button A
        .ui.button B
        .ui.button C
        .ui.button D
        .ui.button E



//- template(name='take_act_test')
//-     with current_doc
//-         .ui.stackable.padded.grid 
//-             .middle.aligned.row 
//-                 .four.wide.column
//-                     a.ui.button(href="/test/#{test_id}/view")
//-                         i.chevron.left.icon
//-                         |test 
//-                 .eight.wide.column
//-                     .ui.header #{test.title}
//-             .centered.row 
//-                 .twelve.wide.column 
//-                     iframe(src=test.link width="100%" height="100%")
//-                     //- iframe(src="https://drive.google.com/file/d/0B-SjC2QWxqXRekpHR21rWDVObHc/view" width="100%" height="100%")
//-                     //- iframe(src="https://drive.google.com/file/d/0B-SjC2QWxqXRZzVQZkEzRUZoSUU/preview" width="640" height="480")
//-                 .four.wide.column
//-                     each test_questions 
//-                         .ui.inline.header #{number} 
//-                             if single_digit
//-                                 |&nbsp;
//-                                 |&nbsp;
//-                         .ui.black.basic.icon.mini.compact.buttons
//-                             if is_odd
//-                                 +select_act_choice key='A'
//-                                 +select_act_choice key='B'
//-                                 +select_act_choice key='C'
//-                                 +select_act_choice key='D'
//-                                 +select_act_choice key='E'
//-                                 +select_act_choice key='?' title="I don't know"
//-                             else 
//-                                 +select_act_choice key='F'
//-                                 +select_act_choice key='G'
//-                                 +select_act_choice key='H'
//-                                 +select_act_choice key='I'
//-                                 +select_act_choice key='J'
//-                                 +select_act_choice key='?' title="I don't know"
//- 
//-                         //- +answer_row
//-                         div
//-                     .ui.fluid.button.complete_test
//-                         |calculate
//-                     .ui.inline.header 
//-                         |#{correct_count}
//-                         i.green.checkmark.icon
//-                     .ui.inline.header #{incorrect_count}
//-                         i.red.remove.icon
//-                     .ui.header #{correct_percent}%
//-                 //-     each second_row 
//-                 //-         div
//-                 //-         strong {{this}}
//-                 //-         +answer_row
//- 
//- template(name='select_act_choice')
//-     .ui.button.select_choice(class=choice_class title=title) #{key}
