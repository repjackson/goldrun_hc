template(name='user_awards')
    .ui.grey.inline.center.aligned.header 
        i.people.carry.icon
        | awards
    .ui.middle.aligned.selection.animated.large.list
        each awards
            +user_segment
    .ui.segment.profile_block
        .ui.inline.center.aligned.header 
            i.badge.icon
            | awards
        .ui.link.items
            each awards
                +award
    .ui.header nonawards    
    each nonawards
        +user_segment




template(name='user_social')
    .ui.grey.inline.center.aligned.header 
        i.comments.icon
        | social
    .ui.header following
    .ui.header followers




template(name='user_requests')
    .ui.grey.inline.center.aligned.header 
        i.hand.holding.usd.icon
        | requests
    .ui.icon.button.add_new_request
        i.plus.icon
    each requests
        .ui.header #{title}
        




template(name='user_tutoring')
    with current_user
        .ui.center.aligned.header 
            i.chalkboard.icon
            | tutoring
        .ui.stackable.grid
            .three.column.row
                .column
                    if accepting_students
                        .ui.header 
                            i.green.clock.icon 
                            |accepting students
                        unless tutelage_requested
                            .ui.button.request_tutelage
                                |request tutelage 
                        else 
                            .ui.button.cancel_request
                                |tutelage requested 
                    else 
                        .ui.header not accepting students
                .column
                    .ui.header tutoring sessions
                .column
                    .ui.header students
                    each students 
                        .ui.segment
                            .ui.header #{name}
                .column
                    .ui.header tutalege requests
                    each tutalege_requests
                        .ui.segment
                            .ui.header #{when}
                            +user_info author
                            if is_current_user
                                .ui.button.accept_request
                                    i.green.checkmark.icon
                                    |accept
                                .ui.button.reject_request
                                    i.red.ban.icon
                                    |reject
                            if approved
                                i.green.checkmark.icon
                            if rejected
                                i.red.ban.icon
                            if is_author 
                                +remove_button
            
        each user_students
            .ui.header #{name}
        

template(name='user_groups')
    .ui.center.aligned.header 
        i.users.icon
        | groups



template(name='user_brain')
    .ui.inline.header 
        i.brain.icon
        |brain
    .ui.button.add_thought
        i.plus.icon 
        |thought
    with editing_doc
        +array_edit key='tags' direct=true
        +session_edit_button
    unless editing_doc
        +cloud filter='thought'
    .ui.header thoughts
    each thoughts 
        .ui.segment 
            each tags 
                .ui.inverted.label #{this}
            |#{when}


template(name='user_right')
    .ui.inline.header 
        i.remove.icon
        |right concepts
    i.recalc_right_ids.link.circular.refresh.icon
    .ui.two.column.stackable.grid 
        .column
            each current_user.right_tag_cloud
                .ui.large.label 
                    |#{tag}
                    small #{count}
            .ui.header right questions
            //- each current_user.all_right_ids
            //-     .ui.header #{this}
            .ui.bulleted.list 
                each right_questions  
                    .item
                        |!{title}
        .column
            .ui.header most similar 
            i.circular.link.refresh.icon.recalc_similar
            .ui.header union
            .ui.large.list
                each sorted_right_unions
                    .item 
                        |user id #{username} #{union_count}
                        each union 
                            .ui.label #{this}
            .ui.header most right opposite
            i.circular.link.refresh.icon.recalc_opposite_right
            .ui.header right opposite union
            .ui.large.link.list
                each right_opposite_unions
                    a.item(href="/user/#{user_id}") user id 
                        #{username} #{union_count}
                    each union 
                        .ui.label #{this}
        


template(name='user_wrong')
    .ui.header 
        i.remove.icon
        |wrong concepts
    .ui.two.column.stackable.grid 
        .column
            i.recalc_wrong_ids.link.circular.refresh.icon
            each current_user.wrong_tag_cloud
                .ui.large.label 
                    |#{tag}
                    small #{count}
            //- each current_user.all_wrong_ids
            //-     .ui.header #{this}
            .ui.header wrong questions
            .ui.bulleted.list 
                each wrong_questions
                    .item !{title}
        .column
            .ui.header most similar 
            i.circular.link.refresh.icon.recalc_similar
                
            .ui.header most opposite     
            i.circular.link.refresh.icon.recalc_similar
            


template(name='user_events')
    .ui.inline.header 
        i.calendar.icon
        |events
    unless appointments.length 
        |no appointments
    each appointments 
        .ui.header #{title}
    div
    .ui.button.new_appointment book


template(name='user_fiq')
    .ui.inline.header 
        i.brain.icon
        |fiq
    .ui.icon.button.recalc_fiq
        i.refresh.icon
    .ui.header #{current_user.username} fiq #{current_user.fiq}
    .ui.header your fiq #{currentUser.fiq}
    .ui.list 
        .item #{answer_count} answers
    .ui.list 
        each top_fiq_users 
            .item #{username}
            

template(name='user_tags')
    .ui.header 
        +i name='tags'
        |tags
    //- each tags
    //-     .ui.large.label 
    //-         if is_user
    //-             i.remove.link.icon.remove_tag
    //-         |#{this}
    if is_current_user
        +array_edit key='tags' label='self tags' direct=true
        //- .ui.fluid.input
        //-     input.tag_user(type='text' placeholder='tag yourself...')
    else
        +array_view key='tags' label='self tags' direct=true
        .ui.header tag #{user_from_username_param.first_name} #{user_from_username_param.last_name}
    unless my_tag_review
        .ui.large.button.new_tag_review
            |tag #{user_from_username_param.first_name}
    each user_tag_reviews
        .ui.segment
            if can_edit
                +array_edit key='tags' label='your tags' direct=true
            else 
                +array_view key='tags' label='review tags' direct=true
            +author_info




template(name='user_friends')
    .ui.center.aligned.header 
        i.people.carry.icon
        | friends
    +user_friend_button
    .ui.middle.aligned.selection.animated.large.list
        each friends
            +user_segment



template(name='user_questions')
    .ui.header user questions
    each questions 
        .ui.segment
            a(href="/question/#{_id}/view") !{title}
            each tags 
                .ui.small.label #{this}


template(name='user_brain_small')
    a.ui.header(href="/user/#{_id}/brain")
        i.brain.icon
        |your brain
    +cloud filter='thought'




//- template(name='user_segment')
//-     a.item(href="/user/#{_id}")
//-         img.ui.avatar.image(src="{{c.url profile_image_id gravity='face' crop='fit'}}")
//-         .content
//-             .header
//-                 |#{name}
//-             .description
//-                 each tags
//-                     .ui.label #{this}

    //- .ui.card
    //-     .image
    //-         if image_id
    //-             img(src="{{c.url image_id gravity='face' crop='crop'}}")
    //-     .content
    //-         a.ui.header(href="/user/#{username}")
    //-             |#{first_name} #{last_name}
    //-             //- |#{username}
    //-         //- .ui.header Tags
    //-         each tags
    //-             .ui.label #{this}
    //-         +user_status user
    //-         .ui.header #{body}
    //-         +user_friend_button

template(name='user_friend_button')
    if is_friend
        .ui.blue.fade.animated.button.unfriend
            .visible.content
                |friend
            .hidden.content
                i.minus.icon
    else
        .ui.button.friend
            i.plus.icon
            |friend


            
template(name='user_tests')
    .ui.center.aligned.header 
        i.edit.icon
        |tests uploaded
    i.circular.link.refresh.icon.recalc_test_stats
    .ui.stackable.padded.grid 
        .two.column.row 
            .column
                .ui.large.link.list
                    each tests 
                        a.item(href="/test/#{_id}/view") 
                            .content 
                                .header 
                                    |#{title}
                                .description 
                                    i.grey.thumbs.up.outline.icon
                                    |#{upvotes}
                                    i.grey.thumbs.down.outline.icon
                                    |#{downvotes}
                                    |= 
                                    |#{points}
                                    |pts
            .column
                .ui.header stats
                with current_user
                    .ui.large.list 
                        .item #{total_test_points} total test points
                        .item #{total_test_upvotes} total test upvotes
                        .item #{total_test_downvotes} total test downvotes
    
    
    
template(name='user_answered_questions_small')
    .ui.segment 
        .ui.header
            i.tasks.icon
            |answered questions
        .ui.link.list 
            each answered_questions 
                .item hi
    
template(name='user_bookmarks_small')
    .ui.inline.header
        i.bookmark.small.icon
        | bookmarks
    div
    .ui.large.link.list
        each bookmarks
            a.item(href="/#{model}/#{_id}/view") #{title} [#{model}]
        


template(name='user_awards_small')
    .ui.segment 
        .ui.header
            i.award.icon
            | awards
            
            

template(name='user_finance')  
    .ui.grid      
        .three.column.row
            .column
                .ui.segment
                    .ui.small.header 
                        strong $#{ssd.total_credit_amount}
                        small total weekly income
                    .ui.small.header
                        strong #{ssd.credit_count}
                        small credits
            .column
                .ui.segment
                    .ui.small.header
                        strong $#{ssd.total_debit_amount}
                        small total weekly expenses
                    .ui.small.header
                        strong #{ssd.debit_count}
                        small debits
            .column
                .ui.segment
                    .ui.small.header
                        |growth from last week
        .two.column.row
            .column
                .ui.segment
                    .ui.header 
                        |weekly credits
                    //- .ui.bulleted.list
                    //-     each user_credits
                    //-         .item 
                    //-             |#{amount}
                    //-             if icon
                    //-                 +i name=icon
                    //-             strong #{text}
                    //-             small #{when}
                    .ui.feed.mediumscroll
                        each user_credits
                            .event 
                                .label
                                    if is_credit
                                        i.grey.chevron.up.icon
                                    if is_debit
                                        i.grey.chevron.down.icon
                                    else if icon
                                        i.grey.icon(class=icon)
                                .content
                                    .summary
                                        a.user(href="/user/#{target_user.username}")
                                            |#{target_user.name}
                                        |#{text}
                                        .date #{when}
                                    .meta
                                        +voting_small
                                        //- a.like
                                        //-     i.like.icon 
                                        //-     |4 likes
                                        a.remove
                                            i.grey.undo.icon
                                        //- if is_dev
                                        //-     +remove_button
            .column
                .ui.segment
                    .ui.header 
                        i.chevron.down.icon
                        |weekly debits
                    .ui.feed.mediumscroll
                        each user_debits
                            .event 
                                .label
                                    if is_credit
                                        i.chevron.up.icon
                                    if is_debit
                                        i.chevron.down.icon
                                    else if icon
                                        i.icon(class=icon)
                                .content
                                    .summary
                                        a.user(href="/user/#{target_user.username}")
                                            |#{target_user.name}
                                        |#{text}
                                        .date #{when}
                                    .meta
                                        +voting_small
                                        //- a.like
                                        //-     i.like.icon 
                                        //-     |4 likes
                                        a.remove
                                            i.grey.undo.icon
                                        //- if is_dev
                                        //-     +remove_button
                        //- +range_edit                
            .column 
                .ui.header offer
                .ui.button.add_offer
                    |+ offer
            .column
                +user_transactions
                
                
                
template(name='user_transactions')
    .ui.header 
        |transactions
        .ui.button 
            |add transaction


template(name='user_shop')
    .ui.header 
        i.shopping.cart.icon
        |shop
    .ui.button.add_product
        i.plus.icon
        |product


template(name='user_credit')
    //- .ui.header 
    //-     +i name='money'
    //-     |finance
    //- .ui.statistic
    //-     .label #{user_from_username_param.name}'s credits
    //-     .value $#{user_from_username_param.credit}
    .ui.stackable.two.column.grid
        if is_current_user
            .column
                .ui.header 
                    |withdraw
                |$10 minimum, takes one business day 
                .ui.action.fluid.input
                    input.withdrawal_amount(type='number' min='1' max=currentUser.credit placeholder='amount')
                    .ui.icon.button.initial_withdrawal 
                        i.right.chevron.icon
                .ui.small.header withdrawals
                .ui.bulleted.list
                    each withdrawals
                        .item
                            .ui.header #{when} for #{amount} credit
                            |status: #{status}
                            .ui.button.cancel_withdrawal
                                i.ban.icon
                                |cancel
            .column
                .ui.header 
                    |deposits
                |deposits are given +5% credit after credit card processing fee
                .ui.action.fluid.input
                    input.deposit_amount(type='number' min='1' placeholder='deposit')
                    .ui.icon.button.add_credits   
                        i.right.chevron.icon
                        
                .ui.large.bulleted.list
                    each deposits
                        .item 
                            .content
                                .header 
                                    |$#{amount} + #{bonus}c
                                .description #{when} {{long_date _timestamp}}
                                //- if is_dev
                                +remove_button
